// Generated by CoffeeScript 1.7.1
(function() {
  this.app = require('zappajs')(5671, function() {
    var pv, pvobjs;
    this.configure((function(_this) {
      return function() {
        _this.use('bodyParser', 'methodOverride', _this.app.router, 'static');
        return _this.set({
          'basepath': '/v1.0'
        });
      };
    })(this));
    this.configure({
      development: (function(_this) {
        return function() {
          return _this.use({
            errorHandler: {
              dumpExceptions: true,
              showStack: true
            }
          });
        };
      })(this),
      production: (function(_this) {
        return function() {
          return _this.use('errorHandler');
        };
      })(this)
    });
    this.enable('serve jquery', 'minify');
    pv = require('./provisioner');
    pvobjs = {};
    this.get({
      '/provision/:id': function() {
        console.log(" get provison id received");
        return pv.get(this.params.id, (function(_this) {
          return function(res) {
            console.log("get provision id response " + res);
            return _this.send(res);
          };
        })(this));
      }
    });
    this.post({
      '/provision': function() {
        console.log("post provision vm received" + JSON.stringify(this.body));
        return pv.create(this.body, (function(_this) {
          return function(res) {
            console.log("post provision response" + JSON.stringify(res));
            return _this.send(res);
          };
        })(this));
      }
    });
    this.get({
      '/provision': function() {
        console.log("post provision vm received" + JSON.stringify(this.body));
        return pv.list((function(_this) {
          return function(res) {
            console.log("get provision response" + JSON.stringify(res));
            return _this.send(res);
          };
        })(this));
      }
    });
    this.get({
      '/collect/:id/stats': function() {
        console.log(" get provison stats received ----" + this.params.id);
        return pv.stats(this.params.id, (function(_this) {
          return function(res) {
            console.log("get provision stats response " + JSON.stringify(res));
            return _this.send(res);
          };
        })(this));
      }
    });
    this.get({
      '/provision/:pid/service/:sid': function() {
        console.log(" get service provision id received");
        pv.serviceget(this.params.pid, this.params.sid, (function(_this) {
          return function(res) {
            console.log("get provision id response " + res);
            return _this.send(res);
          };
        })(this));
        return "Error";
      }
    });
    this.get({
      '/device/:pid/service': function() {}
    });
    return this.get({
      '/device/:pid/service/:id': function() {}
    });
  }).app;

}).call(this);
